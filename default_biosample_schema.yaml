openapi: 3.0.2
servers: []
info:
  version: "0.1"
  title: GA4GH Beacon Biosample Default Schema
  description: >-
    Schema for biosamples to be used as default by the Beacon.
  contact:
    email: beacon@ga4gh.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: |
    'Beacon Project'
  url: 'http://beacon-project.io/'
paths: {}
components:
  schemas:
    CancerFeatures:
      description: |
        Values specifying cancer-specific features, including progression and 
        tumor grade.
      type: object
      properties:
        tumorProgression:
          description: |
            Ontology value from Neoplasm by Special Category ontology 
            (NCIT:C7062). Tumor progression category indicating primary, 
            metastatic or recurrent progression, e.g. NCIT:C84509 (Primary 
            Malignant Neoplasm).
          type: string
          example: 'NCIT:C84509'
        tumorGrade:
          description: |
            Ontology value from Tumor Grading Characteristic ontology (Mondo 
            Disease Ontology MONDO:0024488) General tumor grading.
          type: string
          example: 'MONDO:0024492'
    Biosample:
      description: |
        Todo
      type: object
      properties:
        biosampleId:
          description: |
            Biosample identifier (external accession or internal ID).
          type: string
          example: 'S0001'
        individualId:
          description: |
            Reference to individual ID (Individual.individualId).
          type: string
          example: 'P0001'
        description:
          description: |
            Any relevant info about the biosample that does not fit into any 
            other field in the schema.
          type: string
          example: 'Some free text'
        biosampleStatus:
          description: |
            Ontology value from Experimental Factor Ontology (EFO) Material 
            Sample ontology (OBI:0000747). 

            Classification of the sample in abnormal sample (EFO:0009655) or 
            reference sample (EFO:0009654).
          type: string
          enum:
            - 'EFO:0009655'
            - 'EFO:0009654'
          example: 'EFO:0009655'
        collectionDate:
          description: |
            Date of biosample collection in the ISO8601 
            duration format `P[n]Y[n]M[n]DT[n]H[n]M[n]S`.
          type: string
          example: 'P32Y6M1D'
        IndividualAgeAtCollection:
          description: |
            Individual’s age at the time of sample collection 
            in the ISO8601 duration format `P[n]Y[n]M[n]DT[n]H[n]M[n]S`.
          type: string
          example: 'P32Y6M1D'
        sampleOriginType:
          description: |
            Ontology value for category of sample origin #todo add Ontology name
            e.g ”organism primary tissue”, ”organism xenograft”, 
            ”organism-derived fluid”, ”cell culture”, ”environmental sample”
          type: string
          enum:
            - 'organism primary tissue'
            - 'organism xenograft'
            - 'organism-derived fluid'
            - 'cell culture'
            - 'environmental sample'
          example: 'organism primary tissue'
        sampleOriginDetail:
          description: |
            Ontology value from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO).
            Specific instance of sample origin matching the category set in sampleOriginType e.g ”HEK293T”, ”nasopharynx”
          type: string
          example:
            - 'HEK293T'
            - 'nasopharynx'
        obtentionProcedure:
          description: |
            Ontology value from NCIT Intervention or Procedure ontology 
            describing the procedure for sample obtention, e.g. NCIT:C15189 
            (biopsy).
          type: string
          example: 'NCIT:C15189'
        cancerFeatures:
          $ref: '#/components/schemas/CancerFeatures'
        info:
          description: |
            Additional unspecified metadata about the dataset response or its 
            content.
          type: object
          example:
            additionalInfoKey1: 
              - additionalInfoValue1
              - additionalInfoValue2
            additionalInfoKey2: additionalInfoValue3